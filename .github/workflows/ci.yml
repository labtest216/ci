name: "health-check: Build Tag Push"

on:
  push:
    branches:
      - main
    #paths:
      #- public/**
      #- source/**
      #- ci-test

env:
  REPO_TYPE: hub                                                  
  REPO_NAME: fpos
  AWS_REGION: us-east-1                                           
  AWS_ROLE_ARN: arn:aws:iam::123456789012:role/GitHubActionsRole 
  IMAGE_NAME: ${{ github.event.repository.name }}                 # frontend, backend ai.
  SCAN_ENABLE: 'true'
  SCAN_FORMAT: table
  SCAN_TYPE: 'os,library'
  SCAN_SEVR: 'CRITICAL,HIGH'
  DOCKER_FILE_NAME: Dockerfie
  DOCKER_CONTEXT: .
  TELEG_SEND: 'true'
  
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    #runs-on: self-hosted
    environment: DEV

    steps:
    - name: Debug
      run: printenv | sort

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set buildx X86/ARM
      uses: docker/setup-buildx-action@v2
      
    #- name: Set up QEMU
    #  uses: docker/setup-qemu-action@v3
          
    ####################################
    # Build and scan local linux/amd64
    ###################################    
    - name: Build image linux/amd64
      if: env.SCAN_ENABLE == 'true'
      uses: docker/build-push-action@v5
      with:
        push: false
        load: true
        cache-from: type=gha
        platforms: linux/amd64
        file: ${{ env.DOCKER_FILE_NAME }}
        context: ${{ env.DOCKER_CONTEXT }}
        tags: ${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest
        #build-args: |
        #  ARG1=value1
        #  ARG2=value2
        #secrets: | 
        #  MY_SECRET1=${{ secrets.MY_SECRET1 }}
        #  MY_SECRET2=${{ secrets.MY_SECRET2 }}

    - name: Scan image linux/amd64
      if: env.SCAN_ENABLE == 'true'
      uses: aquasecurity/trivy-action@0.24.0
      with:
        exit-code: '1'                       
        ignore-unfixed: true                
        cache-dir: /tmp/trivy-cache          
        skip-dirs: /tmp
        vuln-type: ${{ env.SCAN_TYPE }}          
        severity: ${{ env.SCAN_SEVR }}
        format: ${{ env.SCAN_FORMAT }}
        image-ref: ${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest

    ####################################
    # Build and scan local linux/arm64
    ###################################    
    - name: Build image linux/arm64
      if: env.SCAN_ENABLE == 'true'
      uses: docker/build-push-action@v5
      with:
        push: false
        load: true
        cache-from: type=gha
        platforms: linux/arm64
        file: ${{ env.DOCKER_FILE_NAME }}
        context: ${{ env.DOCKER_CONTEXT }}
        tags: ${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest
        #build-args: |
        #  ARG1=value1
        #  ARG2=value2
        #secrets: | 
        #  MY_SECRET1=${{ secrets.MY_SECRET1 }}
        #  MY_SECRET2=${{ secrets.MY_SECRET2 }}

    - name: Scan image linux/arm64
      if: env.SCAN_ENABLE == 'true'
      uses: aquasecurity/trivy-action@0.24.0
      with:
        exit-code: '1'                       
        ignore-unfixed: true                
        cache-dir: /tmp/trivy-cache          
        skip-dirs: /tmp
        vuln-type: ${{ env.SCAN_TYPE }}          
        severity: ${{ env.SCAN_SEVR }}
        format: ${{ env.SCAN_FORMAT }}
        image-ref: ${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest

    ##############################################
    # Login to docker repos
    ##############################################    
    - name: Login to aws ecr
      if: env.IMAGE_REPO_TYPE == 'ecr'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.AWS_ROLE_ARN }} 
        aws-region: ${{ env.AWS_REGION }} 
        role-session-name: GitHubActionsSession

    - name: Log in to docker hub
      if: env.REPO_TYPE == 'hub'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    ##############################################
    # Build and push image linux/arm64 linux/arm64
    ##############################################    
    - name: Build and push image linux/arm64 linux/arm64
      uses: docker/build-push-action@v5
      with:
        push: true
        cache-from: type=gha
        platforms: linux/amd64,linux/arm64
        file: ${{ env.DOCKER_FILE_NAME }}
        context: ${{ env.DOCKER_CONTEXT }}
        tags: |
          ${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ github.run_number }}
        #build-args: |
        #  ARG1=value1
        #  ARG2=value2
        #secrets: | 
        #  MY_SECRET1=${{ secrets.MY_SECRET1 }}
        #  MY_SECRET2=${{ secrets.MY_SECRET2 }}
    
    ##############################################
    # Send report
    ############################################## 
    - name: Send to telegram
      if: env.TELEG_SEND == 'hub'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID_FRONTEND }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          New Docker image pushed:
          - Repository: ${{ env.REPO_NAME }}
          - Image: ${{ env.IMAGE_NAME }}
          - Tag: latest
